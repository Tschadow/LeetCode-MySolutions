class MyStack {
    
    Queue<Integer> queue;

    public MyStack() {
        queue = new LinkedList<Integer>();
    }
    
    public void push(int x) {
        queue.add(x);
    }
    
    public int pop() {
        Queue<Integer> tempQueue = queue;
            int popValue = 0;
            queue = new LinkedList<Integer>();
            while (tempQueue.peek() != null) {
                popValue = tempQueue.poll();
                if (tempQueue.peek() != null) {
                    queue.add(popValue);
                }
                else    break;
            }
            return popValue;
    }
    
    public int top() {
        int topValue = 0;
            Queue<Integer> tempQueue = queue;
            queue = new LinkedList<Integer>();
            while (tempQueue.peek() != null) {
                topValue = tempQueue.poll();
                queue.add(topValue);
                if (tempQueue.peek() == null) {
                    break;
                }
            }
            return topValue;
    }
    
    public boolean empty() {
        return queue.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
